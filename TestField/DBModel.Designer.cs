//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EmotionDBModel", "FK_ItemId_ToItems1", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestField.Item), "OwnedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestField.OwnedItem), true)]
[assembly: EdmRelationshipAttribute("EmotionDBModel", "FK_UserId_ToUsers1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestField.User), "OwnedItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestField.OwnedItem), true)]
[assembly: EdmRelationshipAttribute("EmotionDBModel", "FK_UserId_ToUsers", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestField.User), "UserData", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestField.UserData), true)]

#endregion

namespace TestField
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmotionDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EmotionDBEntities object using the connection string found in the 'EmotionDBEntities' section of the application configuration file.
        /// </summary>
        public EmotionDBEntities() : base("name=EmotionDBEntities", "EmotionDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmotionDBEntities object.
        /// </summary>
        public EmotionDBEntities(string connectionString) : base(connectionString, "EmotionDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmotionDBEntities object.
        /// </summary>
        public EmotionDBEntities(EntityConnection connection) : base(connection, "EmotionDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__RefactorLog> C__RefactorLog
        {
            get
            {
                if ((_C__RefactorLog == null))
                {
                    _C__RefactorLog = base.CreateObjectSet<C__RefactorLog>("C__RefactorLog");
                }
                return _C__RefactorLog;
            }
        }
        private ObjectSet<C__RefactorLog> _C__RefactorLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OwnedItem> OwnedItems
        {
            get
            {
                if ((_OwnedItems == null))
                {
                    _OwnedItems = base.CreateObjectSet<OwnedItem>("OwnedItems");
                }
                return _OwnedItems;
            }
        }
        private ObjectSet<OwnedItem> _OwnedItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserData> UserDatas
        {
            get
            {
                if ((_UserDatas == null))
                {
                    _UserDatas = base.CreateObjectSet<UserData>("UserDatas");
                }
                return _UserDatas;
            }
        }
        private ObjectSet<UserData> _UserDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__RefactorLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__RefactorLog(C__RefactorLog c__RefactorLog)
        {
            base.AddObject("C__RefactorLog", c__RefactorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OwnedItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwnedItems(OwnedItem ownedItem)
        {
            base.AddObject("OwnedItems", ownedItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDatas(UserData userData)
        {
            base.AddObject("UserDatas", userData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmotionDBModel", Name="C__RefactorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__RefactorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__RefactorLog object.
        /// </summary>
        /// <param name="operationKey">Initial value of the OperationKey property.</param>
        public static C__RefactorLog CreateC__RefactorLog(global::System.Guid operationKey)
        {
            C__RefactorLog c__RefactorLog = new C__RefactorLog();
            c__RefactorLog.OperationKey = operationKey;
            return c__RefactorLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationKey
        {
            get
            {
                return _OperationKey;
            }
            set
            {
                if (_OperationKey != value)
                {
                    OnOperationKeyChanging(value);
                    ReportPropertyChanging("OperationKey");
                    _OperationKey = StructuralObject.SetValidValue(value, "OperationKey");
                    ReportPropertyChanged("OperationKey");
                    OnOperationKeyChanged();
                }
            }
        }
        private global::System.Guid _OperationKey;
        partial void OnOperationKeyChanging(global::System.Guid value);
        partial void OnOperationKeyChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmotionDBModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemName">Initial value of the ItemName property.</param>
        /// <param name="itemType">Initial value of the ItemType property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String itemName, global::System.String itemType)
        {
            Item item = new Item();
            item.Id = id;
            item.ItemName = itemName;
            item.ItemType = itemType;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemName
        {
            get
            {
                return _ItemName;
            }
            set
            {
                OnItemNameChanging(value);
                ReportPropertyChanging("ItemName");
                _ItemName = StructuralObject.SetValidValue(value, false, "ItemName");
                ReportPropertyChanged("ItemName");
                OnItemNameChanged();
            }
        }
        private global::System.String _ItemName;
        partial void OnItemNameChanging(global::System.String value);
        partial void OnItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemType
        {
            get
            {
                return _ItemType;
            }
            set
            {
                OnItemTypeChanging(value);
                ReportPropertyChanging("ItemType");
                _ItemType = StructuralObject.SetValidValue(value, false, "ItemType");
                ReportPropertyChanged("ItemType");
                OnItemTypeChanged();
            }
        }
        private global::System.String _ItemType;
        partial void OnItemTypeChanging(global::System.String value);
        partial void OnItemTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_ItemId_ToItems1", "OwnedItem")]
        public OwnedItem OwnedItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_ItemId_ToItems1", "OwnedItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_ItemId_ToItems1", "OwnedItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OwnedItem> OwnedItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_ItemId_ToItems1", "OwnedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OwnedItem>("EmotionDBModel.FK_ItemId_ToItems1", "OwnedItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmotionDBModel", Name="OwnedItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OwnedItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OwnedItem object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemCount">Initial value of the ItemCount property.</param>
        public static OwnedItem CreateOwnedItem(global::System.Int32 userId, global::System.Int32 itemId, global::System.Int32 itemCount)
        {
            OwnedItem ownedItem = new OwnedItem();
            ownedItem.UserId = userId;
            ownedItem.ItemId = itemId;
            ownedItem.ItemCount = itemCount;
            return ownedItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value, "ItemId");
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Int32 _ItemId;
        partial void OnItemIdChanging(global::System.Int32 value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemCount
        {
            get
            {
                return _ItemCount;
            }
            set
            {
                OnItemCountChanging(value);
                ReportPropertyChanging("ItemCount");
                _ItemCount = StructuralObject.SetValidValue(value, "ItemCount");
                ReportPropertyChanged("ItemCount");
                OnItemCountChanged();
            }
        }
        private global::System.Int32 _ItemCount;
        partial void OnItemCountChanging(global::System.Int32 value);
        partial void OnItemCountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_ItemId_ToItems1", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EmotionDBModel.FK_ItemId_ToItems1", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EmotionDBModel.FK_ItemId_ToItems1", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("EmotionDBModel.FK_ItemId_ToItems1", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("EmotionDBModel.FK_ItemId_ToItems1", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_UserId_ToUsers1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers1", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmotionDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="apiURL">Initial value of the apiURL property.</param>
        /// <param name="apiKey">Initial value of the apiKey property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String apiURL, global::System.String apiKey)
        {
            User user = new User();
            user.Id = id;
            user.apiURL = apiURL;
            user.apiKey = apiKey;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String apiURL
        {
            get
            {
                return _apiURL;
            }
            set
            {
                OnapiURLChanging(value);
                ReportPropertyChanging("apiURL");
                _apiURL = StructuralObject.SetValidValue(value, false, "apiURL");
                ReportPropertyChanged("apiURL");
                OnapiURLChanged();
            }
        }
        private global::System.String _apiURL;
        partial void OnapiURLChanging(global::System.String value);
        partial void OnapiURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String apiKey
        {
            get
            {
                return _apiKey;
            }
            set
            {
                OnapiKeyChanging(value);
                ReportPropertyChanging("apiKey");
                _apiKey = StructuralObject.SetValidValue(value, false, "apiKey");
                ReportPropertyChanged("apiKey");
                OnapiKeyChanged();
            }
        }
        private global::System.String _apiKey;
        partial void OnapiKeyChanging(global::System.String value);
        partial void OnapiKeyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_UserId_ToUsers1", "OwnedItem")]
        public OwnedItem OwnedItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_UserId_ToUsers1", "OwnedItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_UserId_ToUsers1", "OwnedItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OwnedItem> OwnedItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnedItem>("EmotionDBModel.FK_UserId_ToUsers1", "OwnedItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OwnedItem>("EmotionDBModel.FK_UserId_ToUsers1", "OwnedItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_UserId_ToUsers", "UserData")]
        public UserData UserData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("EmotionDBModel.FK_UserId_ToUsers", "UserData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("EmotionDBModel.FK_UserId_ToUsers", "UserData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserData> UserDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserData>("EmotionDBModel.FK_UserId_ToUsers", "UserData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserData>("EmotionDBModel.FK_UserId_ToUsers", "UserData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmotionDBModel", Name="UserData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserData object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="joyCoins">Initial value of the JoyCoins property.</param>
        /// <param name="joyGems">Initial value of the JoyGems property.</param>
        /// <param name="dailyStreak">Initial value of the DailyStreak property.</param>
        public static UserData CreateUserData(global::System.Int32 userId, global::System.Int32 joyCoins, global::System.Int32 joyGems, global::System.Int16 dailyStreak)
        {
            UserData userData = new UserData();
            userData.UserId = userId;
            userData.JoyCoins = joyCoins;
            userData.JoyGems = joyGems;
            userData.DailyStreak = dailyStreak;
            return userData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JoyCoins
        {
            get
            {
                return _JoyCoins;
            }
            set
            {
                OnJoyCoinsChanging(value);
                ReportPropertyChanging("JoyCoins");
                _JoyCoins = StructuralObject.SetValidValue(value, "JoyCoins");
                ReportPropertyChanged("JoyCoins");
                OnJoyCoinsChanged();
            }
        }
        private global::System.Int32 _JoyCoins;
        partial void OnJoyCoinsChanging(global::System.Int32 value);
        partial void OnJoyCoinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JoyGems
        {
            get
            {
                return _JoyGems;
            }
            set
            {
                OnJoyGemsChanging(value);
                ReportPropertyChanging("JoyGems");
                _JoyGems = StructuralObject.SetValidValue(value, "JoyGems");
                ReportPropertyChanged("JoyGems");
                OnJoyGemsChanged();
            }
        }
        private global::System.Int32 _JoyGems;
        partial void OnJoyGemsChanging(global::System.Int32 value);
        partial void OnJoyGemsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DailyStreak
        {
            get
            {
                return _DailyStreak;
            }
            set
            {
                OnDailyStreakChanging(value);
                ReportPropertyChanging("DailyStreak");
                _DailyStreak = StructuralObject.SetValidValue(value, "DailyStreak");
                ReportPropertyChanged("DailyStreak");
                OnDailyStreakChanged();
            }
        }
        private global::System.Int16 _DailyStreak;
        partial void OnDailyStreakChanging(global::System.Int16 value);
        partial void OnDailyStreakChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value, "LastLogin");
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Anger
        {
            get
            {
                return _Anger;
            }
            set
            {
                OnAngerChanging(value);
                ReportPropertyChanging("Anger");
                _Anger = StructuralObject.SetValidValue(value, "Anger");
                ReportPropertyChanged("Anger");
                OnAngerChanged();
            }
        }
        private Nullable<global::System.Int32> _Anger;
        partial void OnAngerChanging(Nullable<global::System.Int32> value);
        partial void OnAngerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Contempt
        {
            get
            {
                return _Contempt;
            }
            set
            {
                OnContemptChanging(value);
                ReportPropertyChanging("Contempt");
                _Contempt = StructuralObject.SetValidValue(value, "Contempt");
                ReportPropertyChanged("Contempt");
                OnContemptChanged();
            }
        }
        private Nullable<global::System.Int32> _Contempt;
        partial void OnContemptChanging(Nullable<global::System.Int32> value);
        partial void OnContemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Disgust
        {
            get
            {
                return _Disgust;
            }
            set
            {
                OnDisgustChanging(value);
                ReportPropertyChanging("Disgust");
                _Disgust = StructuralObject.SetValidValue(value, "Disgust");
                ReportPropertyChanged("Disgust");
                OnDisgustChanged();
            }
        }
        private Nullable<global::System.Int32> _Disgust;
        partial void OnDisgustChanging(Nullable<global::System.Int32> value);
        partial void OnDisgustChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Fear
        {
            get
            {
                return _Fear;
            }
            set
            {
                OnFearChanging(value);
                ReportPropertyChanging("Fear");
                _Fear = StructuralObject.SetValidValue(value, "Fear");
                ReportPropertyChanged("Fear");
                OnFearChanged();
            }
        }
        private Nullable<global::System.Int32> _Fear;
        partial void OnFearChanging(Nullable<global::System.Int32> value);
        partial void OnFearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Happiness
        {
            get
            {
                return _Happiness;
            }
            set
            {
                OnHappinessChanging(value);
                ReportPropertyChanging("Happiness");
                _Happiness = StructuralObject.SetValidValue(value, "Happiness");
                ReportPropertyChanged("Happiness");
                OnHappinessChanged();
            }
        }
        private Nullable<global::System.Int32> _Happiness;
        partial void OnHappinessChanging(Nullable<global::System.Int32> value);
        partial void OnHappinessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Neutral
        {
            get
            {
                return _Neutral;
            }
            set
            {
                OnNeutralChanging(value);
                ReportPropertyChanging("Neutral");
                _Neutral = StructuralObject.SetValidValue(value, "Neutral");
                ReportPropertyChanged("Neutral");
                OnNeutralChanged();
            }
        }
        private Nullable<global::System.Int32> _Neutral;
        partial void OnNeutralChanging(Nullable<global::System.Int32> value);
        partial void OnNeutralChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sadness
        {
            get
            {
                return _Sadness;
            }
            set
            {
                OnSadnessChanging(value);
                ReportPropertyChanging("Sadness");
                _Sadness = StructuralObject.SetValidValue(value, "Sadness");
                ReportPropertyChanged("Sadness");
                OnSadnessChanged();
            }
        }
        private Nullable<global::System.Int32> _Sadness;
        partial void OnSadnessChanging(Nullable<global::System.Int32> value);
        partial void OnSadnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Surprise
        {
            get
            {
                return _Surprise;
            }
            set
            {
                OnSurpriseChanging(value);
                ReportPropertyChanging("Surprise");
                _Surprise = StructuralObject.SetValidValue(value, "Surprise");
                ReportPropertyChanged("Surprise");
                OnSurpriseChanged();
            }
        }
        private Nullable<global::System.Int32> _Surprise;
        partial void OnSurpriseChanging(Nullable<global::System.Int32> value);
        partial void OnSurpriseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmotionDBModel", "FK_UserId_ToUsers", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EmotionDBModel.FK_UserId_ToUsers", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
